name: kafka
version: "3.0.0"
summary: Apache kafka cluster in a snap
description: |
  Provides the kafka queue system in a snap. Create kafka
  cluster or standalone; or a cluster of Kafka Connect.

confinement: strict
grade: stable
base: core18
architectures: [amd64]
compression: lzo

plugs:
  # Zookeeper tries to read mount info from its /proc/<pid>
  # for mountinfo and coredump_filter
  proc-folder:
    interface: system-files
    read:
    - /proc

parts:
  kafka:
    plugin: dump
    source: https://archive.apache.org/dist/kafka/$SNAPCRAFT_PROJECT_VERSION/kafka_2.12-$SNAPCRAFT_PROJECT_VERSION.tgz
    # Checksum can be found at the URL above with '.sha512' on the end
    source-checksum: sha512/cb82e685a76fa6041dcb39a8519b4f3c1a16066e9d5d8eab11a825b517d91f690ed9af40492a11471265ae9c486017fd128492f867e3be63ec7770d44f7e54d2
    organize:
      bin: opt/kafka/bin
      config: opt/kafka/default-config
      libs: opt/kafka/libs
      licenses: opt/kafka/licenses
      LICENSE: opt/kafka/LICENSE
      NOTICE: opt/kafka/NOTICE
    prime:
      # Remove the following files that are unneeded
      - -opt/kafka/bin/windows
      - -site-docs
    override-prime: |
      snapcraftctl prime

      # The default scripts that ship with Kafka assume a directory
      # layout which is less than idea for snaps. There are hard-coded
      # paths that expect a 'config' dir adjacent to the 'bin' dir.
      #
      # Here we replace those paths so that configs can be kept in $SNAP_DATA
      sed -i \
        -e "s|\$base_dir/config|/var/snap/kafka/current/config|g" \
        -e "s|\$base_dir/../config|/var/snap/kafka/current/config|g" \
        ${SNAPCRAFT_PRIME}/opt/kafka/bin/*.sh

      # The default 'server.properties' sets the logs dir for Kafka
      # to /tmp/kafka-logs. We replace that default with $SNAP_DATA/logs
      sed -i \
        "s|/tmp/kafka-logs|/var/snap/kafka/current/logs|g" \
        ${SNAPCRAFT_PRIME}/opt/kafka/default-config/server.properties

  java-runtime:
    plugin: nil
    after: [kafka]
    stage-packages:
      - openjdk-11-jre-headless

  prometheus-exporter:
    plugin: nil
    after: [kafka, java-runtime]
    build-packages:
      - wget
      - libpsl5
    override-build: |
      # Download the jmx_prometheus exporter
      wget -qO jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.17.0/jmx_prometheus_javaagent-0.17.0.jar
      cp jmx_prometheus_javaagent.jar $SNAPCRAFT_PART_INSTALL/
    organize:
      jmx_prometheus_javaagent.jar: opt/kafka/extra/jmx_prometheus_javaagent.jar

  local-parts:
    plugin: dump
    source: snap/local
    source-type: local
    after: [prometheus-exporter, java-runtime, kafka]

apps:
  zookeeper:
    command: bin/kafka-wrapper zookeeper-server-start.sh $SNAP_COMMON/zookeeper.properties
    daemon: simple
    plugs: 
      - network
      - network-bind
      - proc-folder

  kafka:
    command: bin/kafka-wrapper kafka-run-class.sh kafka.Kafka $SNAP_COMMON/server.properties
    daemon: simple
    restart-condition: never
    plugs:
      - network-bind
      - network
